
var String CustomTafelColorSim = "120,20,20"
var String CustomKamerColorSim = "120,20,20"

//Kamer scene 1 
var String KamerCColor_S1_ZL = "0,0,100"
var String KamerCColor_S1_Strips = "35,100,35"
var Number TVKast_S1_ColorTemperature = 100
var Number TVKast_S1_Brightness = 20

//Kamer scene 2 
var String KamerCColor_S2_ZL = "0,0,100"
var String KamerCColor_S2_Strips = "35,100,55"
var Number TVKast_S2_ColorTemperature = 100
var Number TVKast_S2_Brightness = 40

//
//Tafel scene 1 kleuren

var String TafelCColor_S1= "49,100,50"
//Tafel scene 2 kleuren
var String TafelCColor_S2= "49,45,100"

//---------------------Tafel-----------------------------------
rule "Tafel scene"
when
        Item TafelScene received command
then
    logDebug("tafel", "TafelScene received command")
    switch(receivedCommand) {
        case 1 :  {
			sendCommand(HueTableZoneScene, "IsfiLGqaT4X7sCs")
			logDebug("tafel", "sendCommand(HueTableZoneScene, IsfiLGqaT4X7sCs)")
		}
        case 2 :  {
			sendCommand(HueTableZoneScene, "srQXRJyUSNPmoxs")
			logDebug("tafel", "sendCommand(HueTableZoneScene, srQXRJyUSNPmoxs)")
		}  
        case 3 :  {
			sendCommand(HueTableZoneColor,CustomTafelColorSim)
			logDebug("tafel", "sendCommand(HueTableZoneColor,CustomTafelColorSim)")
		}
		default : {
			sendCommand(HueTableZoneSwitch , OFF)
			logDebug("tafel", "sendCommand(HueTableZoneSwitch , OFF)")
		} 
	}

end

rule "Tafel kleuren"
when
	Item TafelColorSim received command
then 
	var String IncomingColor = receivedCommand.toString
	if (IncomingColor == "60,100,100" || IncomingColor == TafelCColor_S1) {
		postUpdate(TafelColorSim, TafelCColor_S1) 
		sendCommand(TafelScene,1)
	} else if (IncomingColor == "240,100,100" || IncomingColor == TafelCColor_S2) {
		postUpdate(TafelColorSim, TafelCColor_S2)
		sendCommand(TafelScene,2)
	} else if (receivedCommand == OFF ) {
		sendCommand(TafelScene,0)
	} else {
		CustomTafelColorSim = IncomingColor
		sendCommand(TafelScene,3)
	}
end


//---------------------Kamer-----------------------------------
rule "Kamer scene"
when
        Item KamerScene received command
then
	switch(receivedCommand) {
		case 1 :  { 
			//Normaal
			sendCommand(ZonneLampC, KamerCColor_S1_ZL)
			sendCommand(LightStripTVC, KamerCColor_S1_Strips)
			sendCommand(OlifantBovenColor, KamerCColor_S1_Strips)
			sendCommand(TVKastLinks_ColorTemperature,TVKast_S1_ColorTemperature)
			sendCommand(TVKastRechts_ColorTemperature,TVKast_S1_ColorTemperature)
			sendCommand(TVKastLinks_Brightness,TVKast_S1_Brightness)
			sendCommand(TVKastRechts_Brightness,TVKast_S1_Brightness)
			sendCommand(ZoutLampRelayOutput,ON)
		}
		case 2 :  { 
			//Fel
			sendCommand(ZonneLampC, KamerCColor_S2_ZL)
			sendCommand(LightStripTVC, KamerCColor_S2_Strips)
			sendCommand(OlifantBovenColor, KamerCColor_S2_Strips)
			sendCommand(TVKastLinks_ColorTemperature,TVKast_S2_ColorTemperature)
			sendCommand(TVKastRechts_ColorTemperature,TVKast_S2_ColorTemperature)
			sendCommand(TVKastLinks_Brightness,TVKast_S2_Brightness)
			sendCommand(TVKastRechts_Brightness,TVKast_S2_Brightness)
			sendCommand(ZoutLampRelayOutput,ON)
		}
		case 3 :  { 
			sendCommand(ZonneLampC, CustomKamerColorSim)
			sendCommand(LightStripTVC, CustomKamerColorSim)
			sendCommand(OlifantBovenColor, CustomKamerColorSim)
		}
		default : {
			// Off
			sendCommand(ZonneLampC, OFF)
			sendCommand(LightStripTVC, OFF)
			sendCommand(OlifantBovenColor, OFF)			
			sendCommand(TVKastLinks_Brightness,OFF)
			sendCommand(TVKastRechts_Brightness,OFF)
			sendCommand(ZoutLampRelayOutput,OFF)

		}
	}
end

rule "Kamer kleuren"
when
	Item KamerColorSim received command
then 
var String IncomingColor = receivedCommand.toString
	if (IncomingColor == "60,100,100" || IncomingColor == KamerCColor_S1_Strips) {
		postUpdate(KamerColorSim, KamerCColor_S1_Strips) 
		sendCommand(KamerScene,1)
	} else if (IncomingColor == "240,100,100" ) {
		postUpdate(KamerColorSim, KamerCColor_S2_Strips)
		sendCommand(KamerScene,2)
	} else if (receivedCommand == OFF ) {
		sendCommand(KamerScene,0)
	} else {
		CustomKamerColorSim = IncomingColor
		sendCommand(KamerScene,3)
	}
end




// rule "Tafel lamp uit aan"
// when
//         Item SchemerLampC received update
// then
//         if (SchemerLampC == "81,56,100" ) {
// 		switch(KamerScene) {
// 			case 1 :  { sendCommand(KamerScene, 1) }
// 			case 2 :  { sendCommand(KamerScene, 2) }
// 			default : { sendCommand(KamerScene, 0) }
// 			}
// 	}

// end

// TV Lichten
rule "TV Kast Lichten"
when
		Item HubActivity received update
then 
	var String Activiteit = HubActivity.state.toString

	if (Activiteit == "TV Kijken" || Activiteit == "Watch Fire TV" || Activiteit == "PS3 Spelen"|| Activiteit == "Nintendo Switch"){
		sendCommand(KamerScene,1)
	}

end
rule "keep hue-living rules  in memory"
//use the compiled code in this rule file every minute
when
    Time cron "5 0/1 * 1/1 * ? *"
then
    logInfo("keephueliving","Keep compiled hue-living rules")
end

rule "Kamer dimmer "
when
        Item KamerDimmerDimmerSwitch changed
then
	switch(KamerDimmerDimmerSwitch.state) {
		case 1002.0 :  {
			sendCommand(TafelScene,1)
		 }
		case 2002.0 :  {
			sendCommand(TafelScene,2)
		 }
		case 3002.0 :  {
			sendCommand(TafelScene,1)
		 }
		case 4002.0 :  {
			sendCommand(TafelScene,0)
		 }
	}
end
